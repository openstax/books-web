name: CI

on: [pull_request]

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.4.0
      with:
        access_token: ${{ github.token }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    container: openstax/rex-web:CI
    outputs:
      url: ${{ steps.find-deployment.outputs.url }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Find Deployment
      id: find-deployment
      env:
        GIT_REF: ${{ github.event.pull_request.head.sha }}
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "::set-output name=url::$(./script/get-review-environment.bash)"

  selenium:
    name: Selenium
    runs-on: ubuntu-latest
    container: python
    needs: deploy
    steps:
    - uses: actions/checkout@v2
      with:
        ref: master
    - env:
        BROWSER: 'Chrome'
        MARKER: 'smoke_test'
        BASE_URL: ${{ needs.deploy.outputs.url }}
        SAUCELABS_USERNAME: ${{ secrets.saucelabs_username }}
        SAUCELABS_API_KEY: ${{ secrets.saucelabs_api_key }}
        SECURE_STORE_PASSWORD: ${{ secrets.secure_store_password }}
      run: make sauce

  check-books:
    name: Detect Book Changes
    runs-on: ubuntu-latest
    container: openstax/rex-web:CI
    outputs:
      modified-books: ${{ steps.detect.outputs.changes }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - id: detect
      run: echo "::set-output name=changes::{\"include\":$(./script/get-modified-books.bash)}"

  browser-scan-books:
    name: Browser Scan
    runs-on: ubuntu-latest
    container: openstax/rex-web:CI
    needs: [deploy, check-books]
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.check-books.outputs.modified-books)}}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - uses: actions/cache@v2
      id: node_modules
      with:
        path: node_modules
        key: node_modules
    - run: yarn install
    - run: |
        node script/entry.js domVisitor errorsExist \
          --bookId="$BOOK_ID" \
          --bookVersion="$BOOK_VERSION" \
          --rootUrl "$BASE_URL" \
          --queryString="validateLinks"
      env:
        BOOK_ID: ${{ matrix.book }}
        BOOK_VERSION: ${{ matrix.version }}
        BASE_URL: ${{ needs.deploy.outputs.url }}

  url-scan-books:
    name: URL Scan
    runs-on: ubuntu-latest
    container: openstax/rex-web:CI
    needs: check-books
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.check-books.outputs.modified-books)}}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - uses: actions/cache@v2
      id: node_modules
      with:
        path: node_modules
        key: node_modules
    - run: yarn install
    - run: |
        node script/entry.js urlChecker \
          --rootUrl="https://openstax.org" \
          --bookId="$BOOK_ID" \
          --bookVersion="$BOOK_VERSION"  \
          --useUnversionedUrls
      env:
        BOOK_ID: ${{ matrix.book }}
        BOOK_VERSION: ${{ matrix.version }}

  test:
    name: Test
    runs-on: ubuntu-latest
    container: openstax/rex-web:CI
    strategy:
      fail-fast: false
      matrix:
        suite: [unit, browser, screenshots, build]
    env:
      CI: true
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - uses: actions/cache@v2
      id: node_modules
      with:
        path: node_modules
        key: node_modules
    - run: yarn install
    - run: yarn test:${{ matrix.suite }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: openstax/rex-web:CI
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - uses: actions/cache@v2
      id: node_modules
      with:
        path: node_modules
        key: node_modules
    - run: yarn install
    - run: yarn lint
